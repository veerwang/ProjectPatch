From fcb534ca46e3de2b8c96e7780d76688539b09ec3 Mon Sep 17 00:00:00 2001
From: kevin <kevin.wang2004@hotmail.com>
Date: Mon, 31 Mar 2014 11:31:22 +0800
Subject: [PATCH 2/2] =?UTF-8?q?=E5=9C=A8=E6=AD=A3=E4=BA=A4=E6=98=BE?=
 =?UTF-8?q?=E7=A4=BA=E6=A8=A1=E5=BC=8F=E5=BD=93=E4=B8=AD=E6=B7=BB=E5=8A=A0?=
 =?UTF-8?q?=E6=99=AE=E9=80=9A=E6=98=BE=E7=A4=BA=E6=A8=A1=E5=BC=8F?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 makestatic.sh                           |   2 +-
 src/EVA11/base/CZKPanel.cpp             |  31 --------
 src/EVA11/base/ConcreteDataProcess.cpp  |  57 +++++++++++----
 src/EVA11/base/ConcreteDataProcess.h    |   2 +-
 src/EVA11/base/Global.cpp               |   6 ++
 src/EVA11/base/Global.h                 |   1 +
 src/EVA11/base/Language/Language.cpp    |  16 ++++
 src/EVA11/base/Language/ProjectGBText.h |  24 +++++-
 src/EVA11/base/Mainwin.cpp              |  71 +++++++++++++++---
 src/EVA11/base/Mainwin.h                |   2 +-
 src/EVA11/base/OZKPanel.cpp             |  20 ++++-
 src/EVA11/base/Process.cpp              | 126 ++++++++++++++++++++++++++------
 src/EVA11/base/Test/Test.cpp            |  26 ++++++-
 src/EVA11/base/Test/Test.h              |   5 ++
 14 files changed, 300 insertions(+), 89 deletions(-)

diff --git a/makestatic.sh b/makestatic.sh
index 0742844..6657b8c 100755
--- a/makestatic.sh
+++ b/makestatic.sh
@@ -19,4 +19,4 @@
 
 set -o nounset                              # Treat unset variables as an error
 
-make PROJ=EVA11 CMOD=static CASM=yes
+make PROJ=EVA11 CMOD=static CASM=no
diff --git a/src/EVA11/base/CZKPanel.cpp b/src/EVA11/base/CZKPanel.cpp
index e0f9922..dbc2908 100644
--- a/src/EVA11/base/CZKPanel.cpp
+++ b/src/EVA11/base/CZKPanel.cpp
@@ -636,37 +636,6 @@ int CZKPanel::Key_F6_Fun(Graphic& g)
 
 int CZKPanel::Key_F7_Fun(Graphic& g)
 {
-//	int callen = 10000;
-//	if 	( m_gp->bCompositeSrcPause == false )
-//	{
-//		m_gp->bCompositeSrcPause = true;
-//		Swtich_Status(g);
-//		m_Zscreen[m_gp->ScrSigFocus]->Set_Gain_Degree_ReDraw(g,m_gp->ScrSigM[m_gp->ScrSigFocus],callen,100);
-//		return 0;
-//	}
-//
-//	m_Zscreen[m_gp->ScrSigFocus]->Mixing_Parameters_Calculate(g,callen,100);
-//	m_Zscreen[m_gp->ScrSigFocus]->Set_Gain_Degree_ReDraw(g,m_gp->ScrSigM[m_gp->ScrSigFocus],callen,100);
-//
-//	Language* m_pl = Language::Instance();
-//	MixingManage *algm = MixingManage::Instance();
-//	Msgbox *ms = new Msgbox(200,170,260,100,m_pl->GetText(SAVEMIXCOMFIRM),Msgbox::MSG_OKCANCEL);
-//	ms->Set_Color(Msgbox::MSG_COLORTYPE_BG,g_BUBGNO_CO);
-//	ms->Set_Color(Msgbox::MSG_COLORTYPE_FG,g_BUTXNO_CO);
-//	ms->Set_Transparce(120);
-//	if ( ms->Showme(g) == true )
-//	{
-//		algm->Sync_Mixing_Para(true);
-//		delete ms;
-//		ms = NULL;
-//	}
-//	else
-//	{
-//		algm->Sync_Mixing_Para(false);
-//		delete ms;
-//		ms = NULL;
-//		m_Zscreen[m_gp->ScrSigFocus]->Set_Gain_Degree_ReDraw(g,m_gp->ScrSigM[m_gp->ScrSigFocus],callen,100);
-//	}
 	return 0;
 }
 
diff --git a/src/EVA11/base/ConcreteDataProcess.cpp b/src/EVA11/base/ConcreteDataProcess.cpp
index c56824a..ce5b927 100644
--- a/src/EVA11/base/ConcreteDataProcess.cpp
+++ b/src/EVA11/base/ConcreteDataProcess.cpp
@@ -332,7 +332,14 @@ void OZKDataProcess::Data_Process()
 {
 	IDataProcess::Data_Process();
 	m_repo->Save_Data_Into_Repo(m_ETData);
-	for ( int index = 0;index < 16;index ++ )
+
+	int sc = 0;
+	if 	( m_gp->CrossDisplayMode == 0 )
+		sc = 16;
+	else if ( m_gp->CrossDisplayMode == 1 )
+		sc = 8;
+
+	for ( int index = 0;index < sc;index ++ )
 	{
 		if ( m_gp->ProbeFun[index] == 0 )
 		{
@@ -358,20 +365,42 @@ void OZKDataProcess::Data_Process()
  *  Description:  After Processing Data, Get Data by this function
  * =====================================================================================
  */
-void OZKDataProcess::Get_Data(ETDATA *rawdata)
+void OZKDataProcess::Get_Data(ETDATA *rawdata,int type)
 {
-	uint64_t temp1  = 0;
-	uint64_t temp2  = 0;
-	ETDATA   temp3  = 0;
-	for ( int i=0;i<8;i++ )
+	switch ( type ) 
 	{
-		temp1 = static_cast<uint64_t>(m_ET_X[i<<1])*static_cast<uint64_t>(m_ET_X[i<<1]) + static_cast<uint64_t>(m_ET_Y[i<<1])*static_cast<uint64_t>(m_ET_Y[i<<1]);
-		temp2 = static_cast<uint64_t>(m_ET_X[(i<<1)+1])*static_cast<uint64_t>(m_ET_X[(i<<1)+1]) + static_cast<uint64_t>(m_ET_Y[(i<<1)+1])*static_cast<uint64_t>(m_ET_Y[(i<<1)+1]);
-		temp3 = static_cast<ETDATA>(sqrt(temp1+temp2)*m_gp->SoftCrossGain[i]);
-
-		m_alg->Rotation(m_gp->CrossDegree[i],0,
-						    temp3,
-						    rawdata[i<<1],
-						    rawdata[(i<<1)+1]);
+		case 0: 					//  Cross Mode
+			{
+				uint64_t temp1  = 0;
+				uint64_t temp2  = 0;
+				ETDATA   temp3  = 0;
+
+				for ( int i=0;i<8;i++ )
+				{
+					temp1 = static_cast<uint64_t>(m_ET_X[i<<1])*static_cast<uint64_t>(m_ET_X[i<<1]) + static_cast<uint64_t>(m_ET_Y[i<<1])*static_cast<uint64_t>(m_ET_Y[i<<1]);
+					temp2 = static_cast<uint64_t>(m_ET_X[(i<<1)+1])*static_cast<uint64_t>(m_ET_X[(i<<1)+1]) + static_cast<uint64_t>(m_ET_Y[(i<<1)+1])*static_cast<uint64_t>(m_ET_Y[(i<<1)+1]);
+					temp3 = static_cast<ETDATA>(sqrt(temp1+temp2)*m_gp->SoftCrossGain[i]);
+
+					m_alg->Rotation(m_gp->CrossDegree[i],0,
+									    temp3,
+									    rawdata[i<<1],
+									    rawdata[(i<<1)+1]);
+				}
+			}
+			break;
+
+		case 1:						//  Normal Mode
+			{
+				for ( int i=0;i<8;i++ )
+				{
+					rawdata[i<<1] 	  = m_ET_X[i]; 
+					rawdata[(i<<1)+1] = m_ET_Y[i]; 
+				}
+			}
+			break;
+
+		default:	
+			break;
 	}
+
 }
diff --git a/src/EVA11/base/ConcreteDataProcess.h b/src/EVA11/base/ConcreteDataProcess.h
index 05c9265..382b120 100644
--- a/src/EVA11/base/ConcreteDataProcess.h
+++ b/src/EVA11/base/ConcreteDataProcess.h
@@ -97,7 +97,7 @@ class OZKDataProcess : public IDataProcess
 		virtual ~OZKDataProcess ();
 		virtual void Data_Process ();
 
-		void Get_Data(ETDATA *rawdata);
+		void Get_Data(ETDATA *rawdata,int type);
 	protected:
 		ETDATA			m_ET_X[16];
 		ETDATA			m_ET_Y[16];
diff --git a/src/EVA11/base/Global.cpp b/src/EVA11/base/Global.cpp
index f45af0c..d82db07 100644
--- a/src/EVA11/base/Global.cpp
+++ b/src/EVA11/base/Global.cpp
@@ -181,6 +181,8 @@ void Global::Init_Global_Variables()
 		OCTCentX[i]  = 0;
 		OCTCentY[i]  = 0;
 	}
+
+	CrossDisplayMode     = 1;
 	
 	Driver		     = 4;
 	Offset		     = 0;
@@ -397,6 +399,8 @@ std::ofstream& operator<<(std::ofstream& oo,const Global& ob)
 		oo<<ob.OCTCentX[i]<<' ';
 		oo<<ob.OCTCentY[i]<<' ';
 	}
+	
+	oo<<ob.CrossDisplayMode<<' ';
 
 	oo<<ob.Driver<<' '
 	  <<ob.Offset<<' '
@@ -584,6 +588,8 @@ std::ifstream& operator>>(std::ifstream& io,Global& ob)
 		io>>ob.OCTCentY[i];
 	}
 
+	io>>ob.CrossDisplayMode;
+
 	io>>ob.Driver
 	  >>ob.Offset
 	  >>ob.Precision
diff --git a/src/EVA11/base/Global.h b/src/EVA11/base/Global.h
index 1326d8b..31ef54a 100644
--- a/src/EVA11/base/Global.h
+++ b/src/EVA11/base/Global.h
@@ -90,6 +90,7 @@ class Global
 		int			CrossGain[CROSSCOUNT];
 		int			OCTCentX[CROSSCOUNT];
 		int			OCTCentY[CROSSCOUNT];
+		int			CrossDisplayMode;     /* Crossmode: 0:Normal 1:Cross-Display */
 
 		int		 	Driver;
 		int		 	Offset;
diff --git a/src/EVA11/base/Language/Language.cpp b/src/EVA11/base/Language/Language.cpp
index fbc11d5..81245b6 100644
--- a/src/EVA11/base/Language/Language.cpp
+++ b/src/EVA11/base/Language/Language.cpp
@@ -462,6 +462,14 @@ char const *Language::Get_EN_Text(int index)
 			return CLEAN_EN;
 		case LOG_DELETELOG:
 			return LOG_DELETELOG_EN;
+		case FUN_SELECT:
+			return FUN_SELECT_EN;
+		case FUN_CROSS:
+			return FUN_CROSS_EN;
+		case FUN_NORMAL:
+			return FUN_NORMAL_EN;
+		case NORMAL_CHAN:
+			return NORMAL_CHAN_EN;
 		default:
 			return NONE_EN;
 	}
@@ -878,6 +886,14 @@ char const *Language::Get_CN_Text(int index)
 			return CLEAN_CN;
 		case LOG_DELETELOG:
 			return LOG_DELETELOG_CN;
+		case FUN_SELECT:
+			return FUN_SELECT_CN;
+		case FUN_CROSS:
+			return FUN_CROSS_CN;
+		case FUN_NORMAL:
+			return FUN_NORMAL_CN;
+		case NORMAL_CHAN:
+			return NORMAL_CHAN_CN;
 		default:
 			return NONE_CN;
 	}
diff --git a/src/EVA11/base/Language/ProjectGBText.h b/src/EVA11/base/Language/ProjectGBText.h
index a2d6b28..166232a 100644
--- a/src/EVA11/base/Language/ProjectGBText.h
+++ b/src/EVA11/base/Language/ProjectGBText.h
@@ -126,7 +126,7 @@
 #define LANGUAGE_CN                 "语言"
 #define LAN_VALUE_CN                "中文"
 
-#define DZKDISPLAY_CN		    "双抗显示"
+#define DZKDISPLAY_CN		    "双阻抗"
 
 #define DATE_CN			    "当前日期"
 #define TIME_CN			    "当前时间"
@@ -234,7 +234,7 @@
 #define	GAINRATIO_CN		    "增益比"
 #define CLEANPHOTO_CN		    "是否清除底片图形?"
 
-#define OZKDISPLAY_CN		    "正交模式"
+#define OZKDISPLAY_CN		    "多通道"
 #define SCOPE_CN		    "作用范围"
 #define WHOLE_CN		    "全通道"
 
@@ -278,6 +278,12 @@
 
 #define LOG_DELETELOG_CN	    "手动删除系统日志"
 
+#define FUN_SELECT_CN		    "功能选择"
+#define FUN_CROSS_CN                "正交模式"
+#define FUN_NORMAL_CN               "普通模式"
+
+#define NORMAL_CHAN_CN		    "普通信道"
+
 #define	NONE_CN			    "  "
 /* ********************************************************************  */
 
@@ -493,7 +499,7 @@
 #define	GAINRATIO_EN		    "X/Y Ratio"
 #define CLEANPHOTO_EN		    "Clean Plate, OK?"
 
-#define OZKDISPLAY_EN		    "Quad.Patern"
+#define OZKDISPLAY_EN		    "Multi-Channels"
 #define SCOPE_EN		    "Scope"
 #define WHOLE_EN		    "All Chan."
 
@@ -537,6 +543,12 @@
 
 #define LOG_DELETELOG_EN		    "Manually delete system log"
 
+#define FUN_SELECT_EN		    "Function Sel."
+#define FUN_CROSS_EN                "Cross Mode"
+#define FUN_NORMAL_EN               "Normal Mode"
+
+#define NORMAL_CHAN_EN		    "Normal Chan."
+
 #define	NONE_EN			    "  "
 /* ********************************************************************  */
 
@@ -797,6 +809,12 @@
 #define CLEAN			    201
 #define LOG_DELETELOG		    202
 
+#define FUN_SELECT		    203
+#define FUN_CROSS		    204
+#define FUN_NORMAL		    205
+
+#define NORMAL_CHAN		    206
+
 #define	NONE			    999
 
 #endif
diff --git a/src/EVA11/base/Mainwin.cpp b/src/EVA11/base/Mainwin.cpp
index 64e0d2f..09f56d0 100644
--- a/src/EVA11/base/Mainwin.cpp
+++ b/src/EVA11/base/Mainwin.cpp
@@ -27,7 +27,6 @@
 #include	"Battery.h"
 #include	"Process.h"
 #include 	"Logic.h"
-
 #include 	"Basescreen.h"
 
 #include	"Label.h"
@@ -864,11 +863,17 @@ void Mainwin::Refresh_Normal_Label_Content_1_OZKPanel(Graphic& g,int sub)
 							break;
 
 						case 1:
-							sprintf(m_Msg,"%.1f dB",m_gp->CrossGain[m_gp->ScopeChan]/static_cast<float>(10));
+							if 	( m_gp->CrossDisplayMode == 0 )
+								sprintf(m_Msg,"%.1f dB",m_gp->CrossGain[m_gp->ScopeChan]/static_cast<float>(10));
+							else
+								sprintf(m_Msg,"%.1f dB",m_gp->Gain[m_gp->ScopeChan]/static_cast<float>(10));
 							break;
 
 						case 2:
-							sprintf(m_Msg,"%d DEG",m_gp->CrossDegree[m_gp->ScopeChan]);
+							if 	( m_gp->CrossDisplayMode == 0 )
+								sprintf(m_Msg,"%d DEG",m_gp->CrossDegree[m_gp->ScopeChan]);
+							else
+								sprintf(m_Msg,"%d DEG",m_gp->Degree[m_gp->ScopeChan]);
 							break;
 
 						case 3:
@@ -1535,7 +1540,10 @@ void Mainwin::Refresh_Normal_Label_Content_2_OZKPanel(Graphic& g,int sub)
 						case 4:
 							m_lo->Convert_Hi_Low_Filterpass_2_Char(m_gp->LoFilter[m_gp->QuadChan],false,m_Msg);
 							break;
-						default:	
+						case 5:
+							sprintf(m_Msg,"%s",m_pl->GetText(EXCUTE));
+							break;
+						default:
 							sprintf(m_Msg,"%s",m_pl->GetText(NONE));
 							break;
 					}				/* -----  end switch  ----- */
@@ -1555,6 +1563,12 @@ void Mainwin::Refresh_Normal_Label_Content_2_OZKPanel(Graphic& g,int sub)
 						case 1:
 							sprintf(m_Msg,"%d",m_gp->OCTCentY[0]);
 							break;
+						case 2:
+							if 	( m_gp->CrossDisplayMode == 0 )
+								sprintf(m_Msg,"%s",m_pl->GetText(FUN_CROSS));
+							else if ( m_gp->CrossDisplayMode == 1 )
+								sprintf(m_Msg,"%s",m_pl->GetText(FUN_NORMAL));
+							break;
 						default:	
 							sprintf(m_Msg,"%s",m_pl->GetText(NONE));
 							break;
@@ -2442,7 +2456,10 @@ const char*Mainwin::Get_Normal_Text_1_OZKPanel(int normal,int sub)
 				switch ( normal )
 				{
 					case 0:
-						return m_pl->GetText(CROSSCHAN);
+						if 	( m_gp->CrossDisplayMode == 0 )
+							return m_pl->GetText(CROSSCHAN);
+						else
+							return m_pl->GetText(NORMAL_CHAN);
 						break;
 					case 1:
 						return m_pl->GetText(GAIN);
@@ -2810,6 +2827,9 @@ const char*Mainwin::Get_Normal_Text_2_OZKPanel(int normal,int sub)
 					case 4:	
 						return m_pl->GetText(LOFILTER);
 						break;
+					case 5:
+						return m_pl->GetText(PARASYNC);
+						break;
 					default:	
 						return m_pl->GetText(NONE);
 						break;
@@ -2827,6 +2847,9 @@ const char*Mainwin::Get_Normal_Text_2_OZKPanel(int normal,int sub)
 					case 1:
 						return m_pl->GetText(YNPOINT);
 						break;
+					case 2:
+						return m_pl->GetText(FUN_SELECT);
+						break;
 					default:	
 						return m_pl->GetText(NONE);
 						break;
@@ -3518,7 +3541,7 @@ void Mainwin::Update_Date(Graphic& g,const char* timebuf)
  *  Description: Sync the Cross Channel Parameters to other parameters  
  * =====================================================================================
  */
-void Mainwin::Sync_Cross_Chan_Parameters(Graphic& g)
+void Mainwin::Sync_Cross_Chan_Parameters(Graphic& g,int type)
 {
 	for ( int i=0;i<MAXNORCOUNT;i++ )
 	{
@@ -3526,17 +3549,41 @@ void Mainwin::Sync_Cross_Chan_Parameters(Graphic& g)
 		m_NorButton[i]->Drawme(g,false);
 	}
 
-	Msgbox *ms = new Msgbox(120,170,420,100,m_pl->GetText(PARASYNCCOMFIRM),Msgbox::MSG_OKCANCEL);
+	Msgbox *ms = new Msgbox(90,170,420,100,m_pl->GetText(PARASYNCCOMFIRM),Msgbox::MSG_OKCANCEL);
 	ms->Set_Color(Msgbox::MSG_COLORTYPE_BG,g_BUBGNO_CO);
 	ms->Set_Color(Msgbox::MSG_COLORTYPE_FG,g_BUTXNO_CO);
+
 	if ( ms->Showme(g) == true )
 	{
-		for ( int i=0;i<8;i++ )
+		switch ( type ) 
 		{
-			m_gp->CrossDegree[i] = m_gp->CrossDegree[m_gp->ScopeChan];
-			m_gp->CrossGain[i] = m_gp->CrossGain[m_gp->ScopeChan];
-		}
-		m_gp->Calculate_Gain();
+			case 0: 		// sync Cross Chan parameters
+				{
+					for ( int i=0;i<8;i++ )
+					{
+						m_gp->CrossDegree[i] = m_gp->CrossDegree[m_gp->ScopeChan];
+						m_gp->CrossGain[i] = m_gp->CrossGain[m_gp->ScopeChan];
+					}
+					m_gp->Calculate_Gain();
+				}
+				break;
+			case 1: 		// sync Normal Channels parameters
+				{
+					for ( int i=0;i<8;i++ )
+					{
+						m_gp->Gain[i]   = m_gp->Gain[m_gp->QuadChan];
+						m_gp->Degree[i]	= m_gp->Degree[m_gp->QuadChan];
+					}
+
+					m_gp->Calculate_Gain();
+				}
+				break;
+			default:
+				{
+
+				}
+				break;
+		}				/* -----  end switch  ----- */
 	}
 
 	delete ms;
diff --git a/src/EVA11/base/Mainwin.h b/src/EVA11/base/Mainwin.h
index bfd7cfc..1f1ea8e 100644
--- a/src/EVA11/base/Mainwin.h
+++ b/src/EVA11/base/Mainwin.h
@@ -142,7 +142,7 @@ class Mainwin : public Basewin
 		void DisplayTimeDate(Graphic& g);
 		void Update_Time(Graphic& g,const char *);
 		void Update_Date(Graphic& g,const char *);
-		void Sync_Cross_Chan_Parameters(Graphic& g);
+		void Sync_Cross_Chan_Parameters(Graphic& g,int type);
 	private:
 		friend class 			     OthersProcess;
 		friend class 			     ParameterProcess;
diff --git a/src/EVA11/base/OZKPanel.cpp b/src/EVA11/base/OZKPanel.cpp
index 8054546..ab9549e 100644
--- a/src/EVA11/base/OZKPanel.cpp
+++ b/src/EVA11/base/OZKPanel.cpp
@@ -255,7 +255,7 @@ int OZKPanel::Loop_Panel(Graphic& g)
 		return 0;
 
 	m_DataProcess->Data_Process();
-	m_DataProcess->Get_Data(m_RawBuf);
+	m_DataProcess->Get_Data(m_RawBuf,m_gp->CrossDisplayMode);
 
 	int x,y;
 
@@ -331,7 +331,13 @@ void OZKPanel::Switch_Panel()
 	Device* device = Device::Instance();
 	device->Write_Para_Func(Device::NORMAL);
 
-	for ( int ch=0;ch<16;ch++ )
+	int sc = 0;
+	if 	( m_gp->CrossDisplayMode == 0 )
+		sc = 16;
+	else if ( m_gp->CrossDisplayMode == 1 )
+		sc = 8;
+
+	for ( int ch=0;ch<sc;ch++ )
 	{
 		m_gp->ProbeFun[ch] = 1;			// ECT
 		device->Write_Para_SignalID(ch,m_gp->ProbeFun[ch],m_gp->FreqIndex[ch]+1);
@@ -339,7 +345,7 @@ void OZKPanel::Switch_Panel()
 		device->Write_Para_HiFilter(ch,m_gp->HiFilter[ch]);
 		device->Write_Para_HDGain(ch,m_gp->HDGain[ch]);
 	}
-	for ( int ch=16;ch<Global::CHANCOUNT;ch++ )
+	for ( int ch=sc;ch<Global::CHANCOUNT;ch++ )
 	{
 		m_gp->ProbeFun[ch] = 0;		       // CLOSE
 		device->Write_Para_SignalID(ch,0,m_gp->FreqIndex[ch]+1);
@@ -347,6 +353,8 @@ void OZKPanel::Switch_Panel()
 		device->Write_Para_HiFilter(ch,m_gp->HiFilter[ch]);
 		device->Write_Para_HDGain(ch,m_gp->HDGain[ch]);
 	}
+
+
 	for ( int i=0;i<Global::FREQCOUNT;i++ )
 	{
 		device->Write_Para_Frequence_Value(i,m_gp->FreqValue[i]);
@@ -579,7 +587,11 @@ void OZKPanel::Refresh_Gain_Rotation()
 
 	for ( int i=0;i<m_cMAXScreenCount;i++ )
 	{
-		sprintf(msg,"C%d %.1f dB %d DEG",i+1,gp->CrossGain[i]/static_cast<float>(10),m_gp->CrossDegree[i]);
+		if 	( gp->CrossDisplayMode == 0 )
+			sprintf(msg,"C%d %.1f dB %d DEG",i+1,gp->CrossGain[i]/static_cast<float>(10),m_gp->CrossDegree[i]);
+		else if ( gp->CrossDisplayMode == 1 )
+			sprintf(msg,"S%d %.1f dB %d DEG",i+1,gp->Gain[i]/static_cast<float>(10),m_gp->Degree[i]);
+
 		m_labMsg[i]->Set_Text(msg);
 	}
 
diff --git a/src/EVA11/base/Process.cpp b/src/EVA11/base/Process.cpp
index dbe1a7b..f17ffb8 100644
--- a/src/EVA11/base/Process.cpp
+++ b/src/EVA11/base/Process.cpp
@@ -233,24 +233,50 @@ void DetectProcess::Do_Event_OZKPanel(Graphic& g,int sub,int nor,RLKEY key)
 						{
 							if 	( key == LKEY )
 							{
-								int gain = m_gp->CrossGain[m_gp->ScopeChan];
-								for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+								if 	( m_gp->CrossDisplayMode == 0 )
 								{
-									if ( gain == 5 ) gain = 900;
-									else gain -= 5;
+									int gain = m_gp->CrossGain[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( gain == 5 ) gain = 900;
+										else gain -= 5;
+									}
+									m_gp->CrossGain[m_gp->ScopeChan] = gain;
+								}
+								else if ( m_gp->CrossDisplayMode == 1 )
+								{
+									int gain = m_gp->Gain[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( gain == 5 ) gain = 900;
+										else gain -= 5;
+									}
+									m_gp->Gain[m_gp->ScopeChan] = gain;
 								}
-								m_gp->CrossGain[m_gp->ScopeChan] = gain;
 								m_gp->Calculate_Gain();
 							}
 							else if ( key == RKEY )
 							{
-								int gain = m_gp->CrossGain[m_gp->ScopeChan];
-								for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+								if 	( m_gp->CrossDisplayMode == 0 )
 								{
-									if ( gain == 900 ) gain = 5;
-									else gain += 5;
+									int gain = m_gp->CrossGain[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( gain == 900 ) gain = 5;
+										else gain += 5;
+									}
+									m_gp->CrossGain[m_gp->ScopeChan] = gain;
+								}
+								else if ( m_gp->CrossDisplayMode == 1 )
+								{
+									int gain = m_gp->Gain[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( gain == 900 ) gain = 5;
+										else gain += 5;
+									}
+									m_gp->Gain[m_gp->ScopeChan] = gain;
 								}
-								m_gp->CrossGain[m_gp->ScopeChan] = gain;
 								m_gp->Calculate_Gain();
 							}
 						}
@@ -259,23 +285,49 @@ void DetectProcess::Do_Event_OZKPanel(Graphic& g,int sub,int nor,RLKEY key)
 						{
 							if 	( key == LKEY )
 							{
-								int degree = m_gp->CrossDegree[m_gp->ScopeChan];
-								for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+								if 	( m_gp->CrossDisplayMode == 0 )
 								{
-									if ( degree == 0 ) degree = 359;
-									else degree -= 1;
+									int degree = m_gp->CrossDegree[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( degree == 0 ) degree = 359;
+										else degree -= 1;
+									}
+									m_gp->CrossDegree[m_gp->ScopeChan] = degree;
+								}
+								else if ( m_gp->CrossDisplayMode == 1 )
+								{
+									int degree = m_gp->Degree[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( degree == 0 ) degree = 359;
+										else degree -= 1;
+									}
+									m_gp->Degree[m_gp->ScopeChan] = degree;
 								}
-								m_gp->CrossDegree[m_gp->ScopeChan] = degree;
 							}
 							else if ( key == RKEY )
 							{
-								int degree = m_gp->CrossDegree[m_gp->ScopeChan];
-								for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+								if 	( m_gp->CrossDisplayMode == 0 )
 								{
-									if ( degree == 359 ) degree = 0;
-									else degree += 1;
+									int degree = m_gp->CrossDegree[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( degree == 359 ) degree = 0;
+										else degree += 1;
+									}
+									m_gp->CrossDegree[m_gp->ScopeChan] = degree;
+								}
+								else if ( m_gp->CrossDisplayMode == 1 )
+								{
+									int degree = m_gp->Degree[m_gp->ScopeChan];
+									for ( int i=0;i<m_gp->MultiKey*2 + 1;i++ )
+									{
+										if ( degree == 359 ) degree = 0;
+										else degree += 1;
+									}
+									m_gp->Degree[m_gp->ScopeChan] = degree;
 								}
-								m_gp->CrossDegree[m_gp->ScopeChan] = degree;
 							}
 						}
 						break;
@@ -283,7 +335,10 @@ void DetectProcess::Do_Event_OZKPanel(Graphic& g,int sub,int nor,RLKEY key)
 						{
 							if 	( key == LKEY || key == RKEY )
 							{
-								m_mwin->Sync_Cross_Chan_Parameters(g);
+								if 	( m_gp->CrossDisplayMode == 0 )
+									m_mwin->Sync_Cross_Chan_Parameters(g,0);
+								else if ( m_gp->CrossDisplayMode == 1 )
+									m_mwin->Sync_Cross_Chan_Parameters(g,1);
 							}
 						}
 						break;
@@ -2492,10 +2547,39 @@ void ParameterProcess::Do_Event_OZKPanel(Graphic& g,int sub,int nor,RLKEY key)
 					break;
 				case 6: 
 					{
+						if 	( key == LKEY || key == RKEY )
+						{
+							m_mwin->Sync_Cross_Chan_Parameters(g,1);
+						}
 					}
 					break;
 			}
 			break;
+		case 3:
+			switch ( nor ) 
+			{
+				case 1: 
+					break;
+
+				case 2: 
+					break;
+
+				case 3: 
+					{
+						if 	( key == LKEY || key == RKEY )
+						{
+							if ( m_gp->CrossDisplayMode == 1 )
+								m_gp->CrossDisplayMode = 0;
+							else 
+								m_gp->CrossDisplayMode = 1;
+						}
+					}
+					break;
+
+				default:	
+					break;
+			}				/* -----  end switch  ----- */
+			break;
 	}
 }
 
diff --git a/src/EVA11/base/Test/Test.cpp b/src/EVA11/base/Test/Test.cpp
index 5ab866e..2489212 100644
--- a/src/EVA11/base/Test/Test.cpp
+++ b/src/EVA11/base/Test/Test.cpp
@@ -26,8 +26,20 @@
 #define  MIN(x,y)  __extention__{x > y ? y : x}
 
 const char *str = "hello";
-Test::Test () : m_cValue(10)
+
+struct Test::PImpl
+{
+	uint64_t m_AMP;
+	short    X;
+	short    Y;
+};
+
+Test::Test () : m_cValue(10), m_Imple(new struct PImpl)
 {
+	m_Imple->m_AMP  = 0;
+	m_Imple->X      = 50;
+	m_Imple->Y      = 60;
+
 	m_MM = 20;
 	printf ( "Test create\n" );
 //	printf ( "test class\n" );
@@ -208,3 +220,15 @@ void Test::Try_Test()
 		std::cout<<e.what()<<std::endl;
 	}
 }
+
+void Test::Crash()
+{
+//	printf ( "start\n" );
+//
+//	double dx 	= static_cast<double>(m_Imple->X) + static_cast<double>(m_Imple->Y);
+//	double dy 	= static_cast<double>(m_Imple->Y) - static_cast<double>(m_Imple->X);
+//	
+//	m_Imple->m_AMP  = static_case<uint64_t>(sqrt(dx*dx+dy*dy))
+//
+//	printf ( "end\n" );
+}
diff --git a/src/EVA11/base/Test/Test.h b/src/EVA11/base/Test/Test.h
index 0f1a2c1..eba3745 100644
--- a/src/EVA11/base/Test/Test.h
+++ b/src/EVA11/base/Test/Test.h
@@ -33,6 +33,8 @@ class Test : public BaseTest
 
 		void Try_Test();
 
+		void Crash();
+
 	protected:
 
 	private:
@@ -40,4 +42,7 @@ class Test : public BaseTest
 		const int       m_cValue;
 		int             m_MM;
 
+		struct PImpl;
+		std::auto_ptr<struct PImpl>	m_Imple;
+
 }; /* -----  end of class Test  ----- */
-- 
1.8.5.1


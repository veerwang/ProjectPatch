From d8b8538dbbd972e636045c74dbbccad3ce591618 Mon Sep 17 00:00:00 2001
From: kevin <kevin.wang2004@hotmail.com>
Date: Wed, 22 Jan 2014 09:39:44 +0800
Subject: [PATCH] =?UTF-8?q?=E4=BF=AE=E6=AD=A3=EF=BC=8C=E8=A7=A3=E5=86=B3?=
 =?UTF-8?q?=E6=97=A0=E6=B3=95=E5=8A=A8=E6=80=81=E7=BC=96=E8=AF=91=E7=9A=84?=
 =?UTF-8?q?=E9=97=AE=E9=A2=98?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 src/EVA11/base/DataRepo.cpp     |  6 +++---
 src/EVA11/base/IView.cpp        |  6 +++---
 src/EVA11/base/Netclient.cpp    | 22 +++++++++++-----------
 src/EVA11/base/Netclient.h      | 19 ++++++++++---------
 src/EVA11/base/ProjectFixHead.h | 18 ------------------
 src/EVA11/base/ZScreen.cpp      |  4 ++--
 6 files changed, 29 insertions(+), 46 deletions(-)

diff --git a/src/EVA11/base/DataRepo.cpp b/src/EVA11/base/DataRepo.cpp
index fcbd8ea..d1e9991 100644
--- a/src/EVA11/base/DataRepo.cpp
+++ b/src/EVA11/base/DataRepo.cpp
@@ -219,7 +219,7 @@ void DataRepo::Read_2_Memory(std::fstream& filestream)
 	{
 		m_Buffer_Overflow = true;
 		filestream.seekp(2048,ios::beg);           /* seek over the file head */
-		filestream.read((CHAR *)m_Data_Buffer,datalenth);    /* Low Byte High Byte */
+		filestream.read((char *)m_Data_Buffer,datalenth);    /* Low Byte High Byte */
 		m_Data_Index = 0;
 
 	}
@@ -227,14 +227,14 @@ void DataRepo::Read_2_Memory(std::fstream& filestream)
 	{
 		m_Buffer_Overflow = false;
 		filestream.seekp(2048,ios::beg);           /* seek over the file head */
-		filestream.read((CHAR *)m_Data_Buffer,datalenth);    /* Low Byte High Byte */
+		filestream.read((char *)m_Data_Buffer,datalenth);    /* Low Byte High Byte */
 		m_Data_Index = ( datalenth>>1 );
 	}
 	else if ( datalenth > ( m_Data_MAXCount  << 1 ) )
 	{
 		m_Buffer_Overflow = true;
 		filestream.seekp(2048,ios::beg);           /* seek over the file head */
-		filestream.read((CHAR *)m_Data_Buffer,( m_Data_MAXCount  << 1 ));    /* Low Byte High Byte */
+		filestream.read((char *)m_Data_Buffer,( m_Data_MAXCount  << 1 ));    /* Low Byte High Byte */
 		m_Data_Index = 0;
 	}
 }
diff --git a/src/EVA11/base/IView.cpp b/src/EVA11/base/IView.cpp
index 89f5894..bf9e38b 100644
--- a/src/EVA11/base/IView.cpp
+++ b/src/EVA11/base/IView.cpp
@@ -107,9 +107,9 @@ int IView::Key_F1_Fun(Graphic& g)
 
 	int ft            = 16;
 	int key           = 0;
-	UINT32 x          = 70,y = 70,width = 400,heigh = 285+50;
-	UINT32 centx      = x + ( width >> 1 );
-	UINT32 centy      = y + ( heigh >> 1 );
+	uint32_t x          = 70,y = 70,width = 400,heigh = 285+50;
+	uint32_t centx      = x + ( width >> 1 );
+	uint32_t centy      = y + ( heigh >> 1 );
 	COLORTYPE bgcolor = g_BUBGNO_CO,fgcolor    = g_BUTXNO_CO;
 
 	g.DrawFillRect(x,y,width,heigh,bgcolor);
diff --git a/src/EVA11/base/Netclient.cpp b/src/EVA11/base/Netclient.cpp
index 11ef954..68769cc 100644
--- a/src/EVA11/base/Netclient.cpp
+++ b/src/EVA11/base/Netclient.cpp
@@ -21,8 +21,8 @@
 Netclient::Netclient ()
 {
 	m_Port = 5300;
-	m_ServerIP = new CHAR[100];
-	m_ClientIP = new CHAR[100];
+	m_ServerIP = new char[100];
+	m_ClientIP = new char[100];
 
 	sprintf ( m_ServerIP,"%s","192.168.1.1" );
 	Getip(m_ClientIP);
@@ -46,7 +46,7 @@ Netclient::~Netclient ()
  *  Description:  
  * =====================================================================================
  */
-BOOL Netclient::Open_Socket()
+bool Netclient::Open_Socket()
 {
 	m_Socketfd = socket(AF_INET,SOCK_STREAM,0);
 	if ( m_Socketfd == -1 ) { perror("Can't Init a socket!"); return false; }
@@ -71,7 +71,7 @@ BOOL Netclient::Open_Socket()
 		return false;
 	}
 
-	INT32 on = 1;                            /* Enable the Port can't be reused */
+	int32_t on = 1;                            /* Enable the Port can't be reused */
 	if ( setsockopt(m_Socketfd,SOL_SOCKET,SO_REUSEADDR,&on,sizeof(on)) == -1 )
 	{
 		perror("Set Sockopt error");
@@ -79,7 +79,7 @@ BOOL Netclient::Open_Socket()
 		return false;
 	}
 
-	if ( setsockopt(m_Socketfd,SOL_SOCKET,SO_RCVTIMEO,(CHAR *)&m_tv,sizeof(struct timeval)) == -1 )
+	if ( setsockopt(m_Socketfd,SOL_SOCKET,SO_RCVTIMEO,(int8_t *)&m_tv,sizeof(struct timeval)) == -1 )
 	{
 		perror("Set Sockopt error 1");
 		close(m_Socketfd);
@@ -106,7 +106,7 @@ BOOL Netclient::Open_Socket()
 	flags = fcntl(m_Socketfd,F_GETFL,0);
 	fcntl(m_Socketfd,F_SETFL,flags|O_NONBLOCK);
 
-//	if ( setsockopt(m_Socketfd,SOL_SOCKET,SO_SNDTIMEO,(CHAR *)&m_tv,sizeof(struct timeval)) == -1 )
+//	if ( setsockopt(m_Socketfd,SOL_SOCKET,SO_SNDTIMEO,(int8_t *)&m_tv,sizeof(struct timeval)) == -1 )
 //	{
 //		perror("Set Sockopt error 2");
 //		close(m_Socketfd);
@@ -140,9 +140,9 @@ void Netclient::Close_Socket()
  *  Description:   
  * =====================================================================================
  */
-BOOL Netclient::Connect_Server()
+bool Netclient::Connect_Server()
 {
-	BOOL flag = false;
+	bool flag = false;
 	if ( connect(m_Socketfd,(struct sockaddr*)&m_Remote,sizeof(m_Remote)) != 0 )
 	{
 		flag = false;
@@ -160,7 +160,7 @@ BOOL Netclient::Connect_Server()
  *  Description:  
  * =====================================================================================
  */
-const CHAR* Netclient::Get_Remote_IP()
+const char* Netclient::Get_Remote_IP()
 {
 	return inet_ntoa(m_Remote.sin_addr);
 }
@@ -197,7 +197,7 @@ Netclient::NETSTA Netclient::Poll_Socket_Status()
  *  Description:  Get the Data from socket 
  * =====================================================================================
  */
-INT32 Netclient::Get_Data(CHAR* data,INT32 len)
+int32_t Netclient::Get_Data(int8_t* data,int32_t len)
 {
 	return recv(m_Socketfd,data,len,0);
 }
@@ -208,7 +208,7 @@ INT32 Netclient::Get_Data(CHAR* data,INT32 len)
  *  Description:  Send Data into Net port 
  * =====================================================================================
  */
-bool Netclient::Send_Data(CHAR* data,INT32 len)
+bool Netclient::Send_Data(int8_t* data,int32_t len)
 {
 	FD_ZERO(&m_WRfd);
 	FD_SET(m_Socketfd,&m_WRfd);
diff --git a/src/EVA11/base/Netclient.h b/src/EVA11/base/Netclient.h
index 1e62da4..4b37615 100644
--- a/src/EVA11/base/Netclient.h
+++ b/src/EVA11/base/Netclient.h
@@ -37,6 +37,7 @@
 #include        <errno.h>
 #include        <strings.h>
 #include        <stdlib.h>
+#include 	<stdint.h>
 #include	<cstdlib>
 #include	<cstdio>
 #include 	<sys/types.h>
@@ -57,13 +58,13 @@ class Netclient
 			      DATAIN   = 1 };
 		Netclient ();                             /* constructor */
 		~Netclient ();                            /* destructor */
-		BOOL Open_Socket();
+		bool Open_Socket();
 		void Close_Socket();
-		BOOL Connect_Server();
-		const CHAR* Get_Remote_IP();
+		bool Connect_Server();
+		const char* Get_Remote_IP();
 		NETSTA Poll_Socket_Status();
-		INT32 Get_Data(CHAR* data,INT32 len);
-		bool Send_Data(CHAR* data,INT32 len);
+		int32_t Get_Data(int8_t* data,int32_t len);
+		bool Send_Data(int8_t* data,int32_t len);
 		void Getip(char *ip);
 		void Getmac(char *mac);
 
@@ -71,10 +72,10 @@ class Netclient
 	protected:
 
 	private:
-		INT32			m_Port;
-		CHAR*			m_ServerIP;
-		CHAR*			m_ClientIP;
-		INT32			m_Socketfd;
+		int32_t			m_Port;
+		char*			m_ServerIP;
+		char*			m_ClientIP;
+		int32_t			m_Socketfd;
 		struct sockaddr_in	m_Remote;
 		struct sockaddr_in	m_Locale;
 		struct timeval          m_tv;
diff --git a/src/EVA11/base/ProjectFixHead.h b/src/EVA11/base/ProjectFixHead.h
index 6d3994f..75ca4af 100644
--- a/src/EVA11/base/ProjectFixHead.h
+++ b/src/EVA11/base/ProjectFixHead.h
@@ -15,26 +15,9 @@
  *
  * =====================================================================================
  */
-
 #ifndef  _PROJECTFIXHEAD_INC
 #define  _PROJECTFIXHEAD_INC
 /*-----------------------------------------------------------------------------
- *  DATA TYPE USED BY PROJECT
- *-----------------------------------------------------------------------------*/
-/*-----------------------------------------------------------------------------
- *      SYSTEM DATA TYPE
- *-----------------------------------------------------------------------------*/
-typedef unsigned char  		UCHAR;
-typedef char                    CHAR;
-typedef unsigned short          UINT16;
-typedef short                   INT16;
-typedef unsigned int            UINT32;
-typedef int                     INT32;
-typedef double                  DOUBLE;
-typedef long long               INT64;
-typedef unsigned long long      UINT64;
-typedef bool                    BOOL;
-/*-----------------------------------------------------------------------------
  *      APPLICATION DATA TYPE
  *-----------------------------------------------------------------------------*/
 typedef double         		DATATYPE;
@@ -109,7 +92,6 @@ typedef int 	       		COLORTYPE;
 #define	WHITE_1         1	
 #define	BLACK_1         0	
 
-
 #ifdef _KEY_308_A_
 #define KEY_BOTTOM1  0x03                        /* first bottom button key value */
 #define KEY_BOTTOM2  0x05
diff --git a/src/EVA11/base/ZScreen.cpp b/src/EVA11/base/ZScreen.cpp
index 36d56f7..7c3e1c3 100644
--- a/src/EVA11/base/ZScreen.cpp
+++ b/src/EVA11/base/ZScreen.cpp
@@ -51,7 +51,7 @@ Zscreen::Zscreen (int x,int y,int width,int heigh)
 	}
 	m_Data_Ball.dataindex   = 0;
 
-	CHAR temp[5];
+	char temp[5];
 	sprintf(temp,"%d",m_ID);
 
 	m_Focus = false;
@@ -144,7 +144,7 @@ void Zscreen::Set_Back_Coordinate(BACKCOOR back)
 void Zscreen::Set_ID(int id)
 {
 	m_ID = id;
-	CHAR temp[5];
+	char temp[5];
 	sprintf(temp,"%d",m_ID);
 	m_labID->Set_Text(temp);
 }
-- 
1.8.5.1

